\begin{Verbatim}[commandchars=\\\{\}]
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Breath First Search}
\PYG{l+s+sd}{    Args:}
\PYG{l+s+sd}{        G (nx.Digraph): an directed graph with n nodes.}
\PYG{l+s+sd}{        desired\PYGZus{}nodes ([nx.Digraph.node, nx.Digrapoh.node]):}
\PYG{l+s+sd}{        [0]: source node, [1]: destination node}
\PYG{l+s+sd}{    Returns:}
\PYG{l+s+sd}{        Tuple(np.list, np.list):}
\PYG{l+s+sd}{        [0]: Either the sequence of walk to destination or the trial path with statement for failure.}
\PYG{l+s+sd}{        [1]: list of nodes for BFS}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{k+kn}{import} \PYG{n+nn}{util}
\PYG{k}{def} \PYG{n+nf}{bfs\PYGZus{}search}\PYG{p}{(}\PYG{n}{G}\PYG{p}{,} \PYG{n}{desired\PYGZus{}nodes}\PYG{p}{):}
    \PYG{n}{source} \PYG{o}{=} \PYG{n}{desired\PYGZus{}nodes}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}
    \PYG{n}{destination} \PYG{o}{=} \PYG{n}{desired\PYGZus{}nodes}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}
    \PYG{n}{stateQueue} \PYG{o}{=} \PYG{n}{util}\PYG{o}{.}\PYG{n}{Queue}\PYG{p}{()}
    \PYG{n}{pathQueue}\PYG{o}{=} \PYG{n}{util}\PYG{o}{.}\PYG{n}{Queue}\PYG{p}{()}
    \PYG{n}{visitedSet} \PYG{o}{=} \PYG{p}{[]}
    \PYG{n}{visitedSet} \PYG{o}{=} \PYG{n+nb}{set}\PYG{p}{(}\PYG{n}{visitedSet}\PYG{p}{)}
    \PYG{n}{pathList} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{while} \PYG{n}{source} \PYG{o}{!=} \PYG{n}{destination}\PYG{p}{:}
        \PYG{k}{if} \PYG{n}{source} \PYG{o+ow}{not} \PYG{o+ow}{in} \PYG{n}{visitedSet}\PYG{p}{:}
            \PYG{n}{visitedSet}\PYG{o}{.}\PYG{n}{add}\PYG{p}{(}\PYG{n}{source}\PYG{p}{)}
            \PYG{n}{successors} \PYG{o}{=} \PYG{n}{G}\PYG{p}{[}\PYG{n}{source}\PYG{p}{]}
            \PYG{k}{for} \PYG{n}{successor} \PYG{o+ow}{in} \PYG{n}{successors}\PYG{p}{:}
                \PYG{n}{stateQueue}\PYG{o}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{successor}\PYG{p}{)}
                \PYG{n}{pathQueue}\PYG{o}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{pathList} \PYG{o}{+} \PYG{p}{[[}\PYG{n}{source}\PYG{p}{,} \PYG{n}{successor}\PYG{p}{]])}
        \PYG{k}{if} \PYG{n}{stateQueue}\PYG{o}{.}\PYG{n}{isEmpty}\PYG{p}{():}
            \PYG{k}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}state queue empty two nodes are not connected.\PYGZdq{}}\PYG{p}{)}
            \PYG{k}{break}
        \PYG{n}{source} \PYG{o}{=} \PYG{n}{stateQueue}\PYG{o}{.}\PYG{n}{pop}\PYG{p}{()}
        \PYG{n}{pathList} \PYG{o}{=} \PYG{n}{pathQueue}\PYG{o}{.}\PYG{n}{pop}\PYG{p}{()}
    \PYG{n}{nodeList} \PYG{o}{=} \PYG{n}{util}\PYG{o}{.}\PYG{n}{np}\PYG{o}{.}\PYG{n}{zeros}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pathList}\PYG{p}{)}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{n}{nodeList}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{=} \PYG{n}{pathList}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pathList}\PYG{p}{)):}
        \PYG{n}{nodeList}\PYG{p}{[}\PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{=} \PYG{n}{pathList}\PYG{p}{[}\PYG{n}{i}\PYG{p}{][}\PYG{l+m+mi}{1}\PYG{p}{]}
    \PYG{k}{return} \PYG{n}{pathList}\PYG{p}{,} \PYG{n}{nodeList}
\end{Verbatim}
